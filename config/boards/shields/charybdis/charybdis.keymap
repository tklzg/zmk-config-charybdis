/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <behaviors/mouse_key_press.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define MOUSE 4
#define SCROLL 5


/ {
    macros {
        shift_ins: shift_ins {
            label = "ZM_shift_ins";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp INS>
                , <&macro_release &kp LSHFT>
                ;
        };

        ctrl_z: ctrl_z {
            label = "ZM_ctrl_z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_y: ctrl_y {
            label = "ZM_ctrl_y";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Y>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_x: ctrl_x {
            label = "ZM_ctrl_x";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_c: ctrl_c {
            label = "ZM_ctrl_c";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_v: ctrl_v {
            label = "ZM_ctrl_v";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_r: ctrl_r {
            label = "ZM_ctrl_r";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp R>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_w: ctrl_w {
            label = "ZM_ctrl_w";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp W>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_a: ctrl_a {
            label = "ZM_ctrl_a";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_s: ctrl_s {
            label = "ZM_ctrl_r";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp S>
                , <&macro_release &kp LCTRL>
                ;
        };


        ctrl_back: ctrl_back {
            label = "ZM_ctrl_back";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL> 
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_sh_back: ctrl_sh_back {
            label = "ZM_ctrl_sh_back";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHIFT>
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp LCTRL &kp LSHIFT>
                ;
        };

        ctrl_tab: ctrl_tab {
            label = "ZM_ctrl_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL> 
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_sh_tab: ctrl_sh_tab {
            label = "ZM_ctrl_sh_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHIFT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LCTRL &kp LSHIFT>
                ;
        };

        alt_ctrl_del: alt_ctrl_del {
            label = "ZM_alt_ctrl_del";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LALT>
                , <&macro_tap &kp DEL>
                , <&macro_release &kp LCTRL &kp LALT>
                ;
        };

        alt_f4: alt_f4 {
            label = "ZM_alt_f4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp F4>
                , <&macro_release &kp LALT>
                ;
        };

        

        

        alt_enter: alt_enter {
            label = "ZM_alt_enter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp ENTER>
                , <&macro_release &kp LALT>
                ;
        };

        alt_tab: alt_tab {
            label = "ZM_alt_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LALT>
                ;
        };

        alt_cap: alt_cap {
            label = "ZM_alt_cap";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp PSCRN>
                , <&macro_release &kp LALT>
                ;
        };

        alt_w_n: alt_w_n {
            label = "ZM_alt_w_n";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp W &kp N>
                , <&macro_release &kp LALT>
                ;
        };

        shift_g: shift_g {
            label = "ZM_shift_g";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp G>
                , <&macro_release &kp LCTRL>
                ;
        };

        c_v_hom_del: c_v_hom_del {
            label = "ZM_c_v_hom_del";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp HOME &kp RIGHT &kp BSPC>
                ;
        };

        c_v_hom_bs: c_v_hom_bs {
            label = "ZM_c_v_hom_bs";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp HOME &kp RIGHT &kp RIGHT &kp RIGHT>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp END>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp BSPC>
                ;
        };
       
    };

};




    

/ {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        se: shift_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            #binding-cells = <2>;
            tapping-term-ms = <80>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        al: alt_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <136>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        scl: scl_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SCL_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&tog>;
        };

        sclk: sclk_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SCLK_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mkp>, <&tog>;
        };

        alt_left: alt_left {
            label = "ZM_alt_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LALT>
                ;
        };

        alt_test: alt_test {
            label = "ZM_alt_test";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHIFT>
                , <&macro_tap &kp G>
                , <&macro_release &kp LSHIFT>
                ;
        };

        alt_right: alt_right {
            label = "ZM_alt_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LALT>
                ;
        };

        dbl: double_bracket_left {
            compatible = "zmk,behavior-hold-tap";
            label = "DOUBLE_BRACKET";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&alt_test>;
        };
        
        dbr: double_bracket_right {
            compatible = "zmk,behavior-hold-tap";
            label = "DOUBLE_BRACKET";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&trans>, <&alt_right>;
        };

        dbb: double_bracket_back {
            compatible = "zmk,behavior-hold-tap";
            label = "DOUBLE_BRACKET";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&trans>;
        };
 };

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&hm ESC GRAVE  &kp N1  &kp N2   &kp N3     &kp N4   &kp N5                 &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp MINUS
&kp TAB        &kp Q   &kp W    &kp E      &kp R    &kp T                  &kp Y  &kp U    &kp I     &kp O   &kp P    &kp EQUAL
&kp LCTRL      &kp A   &kp S    &kp D      &kp F    &kp G                  &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT      &kp Z   &kp X    &kp C      &kp V    &kp B                  &kp N  &kp M    &al 5 COMMA &kp DOT &kp FSLH &kp LSHFT
&none          &kp RET &kp RBKT &al 1 RALT &kp DEL  &hm LALT LBKT               &mo 2  &none    &kp BSPC  &none   &kp SPACE &none 
            >;
        };

        lower_layer {
            display-name = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &alt_f4      &kp F5                          &kp F6   &kp F7   &kp F8 &kp F9 &kp F10 &kp F11
&alt_tab   &kp F2        &alt_w_n     &kp F4       &ctrl_r      &out OUT_USB                    &trans   &trans   &trans &trans &kp F11 &kp F12
&trans     &ctrl_a       &ctrl_s      &c_v_hom_bs  &c_v_hom_del &shift_ins                      &trans   &trans   &trans &trans &kp RPAR &kp RET
&trans     &ctrl_z       &ctrl_x      &ctrl_c      &ctrl_v      &out OUT_BLE                    &ext_power EP_OFF &ext_power EP_ON &alt_left  &alt_right  &kp BSLH  &kp LSHFT
&trans     &alt_enter    &alt_cap     &trans       &alt_ctrl_del  &kp PSCRN                     &kp RCTRL  &trans    &trans   &trans  &trans  &trans
            >;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                   &kp F6    &kp F7    &kp F8   &kp F9     &kp F10  &kp F11
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &kp HOME  &kp UP   &kp END    &kp N0   &kp F12
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT  &trans   &kp RET
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans                   &trans    &trans    &alt_left &alt_right &kp BSLH &kp LSHFT
&trans     &trans       &kp LGUI     &trans       &trans       &trans                   &trans    &trans    &trans   &trans     &trans   &trans
            >;

        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "adjust";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none                                   &none &none &none &none &none &none
            >;
        };

        mouse_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "mouse";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &trans   &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &kp PG_UP &kp HOME  &kp UP   &kp END   &trans  &ctrl_w
&kp LCTRL  &trans  &trans  &trans  &trans  &trans                &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &ctrl_r &hm RCTRL RET
&kp LSHFT  &trans  &trans  &trans  &trans  &trans                &trans    &mkp LCLK &sclk MCLK 5 &mkp RCLK &dbl LCTRL 1 &alt_test
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &trans   &trans    &trans  &trans
            >;
        };

        scroll_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            display-name = "scroll";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &trans   &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &trans   &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &trans   &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &scl 4 5 &trans    &alt_left  &trans
&trans  &trans  &trans  &trans  &trans  &trans                   &trans    &trans    &trans   &trans    &trans  &trans
            >;
        };

    };
};
